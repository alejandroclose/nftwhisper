{
  "data": {
    "listings": [
      {
        "id": 969776,
        "version": 1,
        "price": 19900000,
        "objkt": {
          "id": "FX1-48733",
          "version": 2,
          "name": "Blockchain Automaton #85",
          "slug": "blockchain-automaton-85",
          "metadata": {
            "name": "Blockchain Automaton #85",
            "iterationHash": "oosoJznYRHJLzC1EME6dpQNcMBHSRudEWSvfz5ZPdTMuyiUjJAg",
            "description": "This experimental project involves an on-chain cellular automaton. The features and cellular automaton rules are derived from the minter's address. Being the first (unto my knowledge) project on fxhash that generates the artwork completely on chain, it seemed fitting to draw inspiration from one of the first projects on fxhash, \"RGB Elementary Cellular Automaton\".\n\nWhat is this?\n\nAn experimental generative token that integrates on-chain generation, and on-chain storage of the artwork. This is accomplished using a custom smart contract. The artwork is generated using the generate_on_chain entrypoint in KT1GRFujk5m6feK7gJcqCU7ijJkFgx5JigEt, and the generated image is subsequently stored on-chain as a byte-string of pixels (row-major order) in the tokens bigmap in KT1GRFujk5m6feK7gJcqCU7ijJkFgx5JigEt.\n\nHow does this work?\n\nSmart contracts have a default entrypoint which is automatically called when XTZ is sent to the contract. By using a smart contract as the primary address, the default entrypoint will be called every time a token is minted. Of course, to prevent accounts from bypassing the fxhash contracts and sending XTZ directly to the smart contract, generating and storing the artwork on-chain, the smart contract checks that an fxhash contract is the account sending XTZ. In this smart contract, the default entrypoint immediately calls the generate_on_chain entrypoint for the sole purpose of making the generation process more apparent on indexers like tzkt.\n\nIn order to make this project compatible with fxhash, the artwork produced by the code submitted to fxhash must be identical to that which is produced by the generative algorithm within the smart contract. At the time of development, the minter's address is the only piece of information which is readily accessible via the fxhash snippet API and in the smart contract. As a result, each account can only generate a single unique artwork (this is enforced by the contract). In the future, this issue could be solved if the fxhash snippet API provided access to the iteration number, as the smart contract could also keep track of this information quite easily.\n\nConsequently, collectors who wish to collect more than one iteration must create additional accounts to mint. The tokens can then be subsequently transferred as per usual.\n\nWhy is the variations preview disabled?\n\nBecause the minter's address is the source of randomness for the generated artwork, not the hash provided by fxhash, changing the hash in the variations preview will have no effect. To see different variations of the artwork you need to modify the fxminter URL parameter in live preview mode.\n\nWhy does the mint button not work on the fxhash frontend?\n\nCurrently, the fxhash frontend has a default storage limit for mint operations that is less than what is required to store the generated image on chain. As a result, the mint button will fail on the fxhash frontend. To get around this, you can mint this token on a mini-website I created (https://blockchain-automaton.netlify.app/), or on Better Call Dev, or by injecting the transaction directly onto the blockchain.\n\nBut Why?\n\nBecause experimentation is fun.",
            "tags": [
              "onchain",
              "cellular automaton",
              "blockchain",
              "pixelart"
            ],
            "generatorUri": "ipfs://Qmeb7huzBQZ5KTo2qqc48Kg5GEumYDKbXMN9UQXkD5Zz5Y",
            "artifactUri": "ipfs://Qmeb7huzBQZ5KTo2qqc48Kg5GEumYDKbXMN9UQXkD5Zz5Y/?fxhash=oosoJznYRHJLzC1EME6dpQNcMBHSRudEWSvfz5ZPdTMuyiUjJAg&fxminter=tz1bYHbPHD3KrhQGpiFuBsaJEHx1Hb7Z6uQ6",
            "displayUri": "ipfs://QmPotfx1hVk5kJbZmnKFt5EaBbdBM3bnFomWnNro2tiwJn",
            "thumbnailUri": "ipfs://QmS137i31rKrDdrCfu5D4MAXV2Tio61h19kne9HrZK72p2",
            "authenticityHash": "32dc91b86866732c962f0d00abc5e31aa077833c7b8eea0323f38e5a0976e4e1",
            "attributes": [
              {
                "name": "mode",
                "value": "Vertical"
              },
              {
                "name": "palette",
                "value": 12
              },
              {
                "name": "size",
                "value": "16x16"
              }
            ],
            "decimals": 0,
            "symbol": "GENTK",
            "version": "0.2"
          },
          "duplicate": false,
          "activeListing": {
            "id": 969776,
            "version": 1,
            "price": 19900000,
            "__typename": "Listing"
          },
          "owner": {
            "id": "tz1bYHbPHD3KrhQGpiFuBsaJEHx1Hb7Z6uQ6",
            "name": null,
            "flag": "NONE",
            "avatarUri": null,
            "__typename": "User"
          },
          "issuer": {
            "flag": "NONE",
            "name": "Blockchain Automaton",
            "author": {
              "id": "tz1QvV3jVPWrJSdDy9ePZBnhGL8bAoQFFBPv",
              "name": "Extracurricular Activities",
              "type": "REGULAR",
              "avatarUri": "ipfs://QmahpnFUbW9NWQjUzNLUxxYLszZC2eeNo5mmRPikJLYge5",
              "flag": "VERIFIED",
              "collaborators": null,
              "__typename": "User"
            },
            "__typename": "GenerativeToken"
          },
          "__typename": "Objkt"
        },
        "__typename": "Listing"
      },
      {
        "id": 969775,
        "version": 1,
        "price": 85000000,
        "objkt": {
          "id": "FX0-879173",
          "version": 1,
          "name": "Dreamcatcher Forest #191",
          "slug": "dreamcatcher-forest-191",
          "metadata": {
            "name": "Dreamcatcher Forest #191",
            "iterationHash": "ooSrh4Tmjd8VNqqy8DtGmjCmXDaqSS7shnRCBx5aSK9SKHQ7fYt",
            "description": "\"Dreamcatcher Forest\" is part of the fxhash interactive minting experience at Art Basel, Basel 2022. The illustration in this work draws inspiration from Native American dreamcatchers, a protective talisman crafted from beautifully intricate patterns of woven thread, built from natural materials & colorful beads.\n\nDreamcatchers are used to protect dreamers while they sleep. Good dreams are able to slip through the web to meet the sleeper beneath, while bad dreams are trapped and prevented.\n\n- Use the \"S\" key to save a PNG image.\n- Use the \"P\" key to export a print-quality image.",
            "tags": [
              "Dreamcatcher",
              "Forest",
              "Leaves",
              "Nature",
              "Flowers",
              "Grass",
              "Line Art",
              "Crosshatch",
              "Sketch",
              "Moir√© Pattern",
              "ABB2022",
              "Art Basel",
              "Basel 2022"
            ],
            "generatorUri": "ipfs://QmQFZCvZQgeX4Ygwa6PaWqSnn2vV7gwDmQz3MbVCWfYBiQ",
            "artifactUri": "ipfs://QmQFZCvZQgeX4Ygwa6PaWqSnn2vV7gwDmQz3MbVCWfYBiQ?fxhash=ooSrh4Tmjd8VNqqy8DtGmjCmXDaqSS7shnRCBx5aSK9SKHQ7fYt",
            "displayUri": "ipfs://QmTLovAx81gBmPWKAtB2VryojfhLCeZGPt7rMHRxRyiXyi",
            "thumbnailUri": "ipfs://QmSVCD2K3WVDH3CALtijmbFte6BTC31Yvd74DQFnkDUosD",
            "authenticityHash": "8fba592a98e7ed87d7ecc74b54825870214c9a6fa7b64fde9f2c98a47e6b9cf7",
            "attributes": [
              {
                "name": "Inset",
                "value": "Small"
              },
              {
                "name": "Detail",
                "value": "Low"
              },
              {
                "name": "Coverage",
                "value": "Hyper"
              },
              {
                "name": "Shading",
                "value": "Hyper"
              },
              {
                "name": "Berries",
                "value": "Small"
              },
              {
                "name": "Window",
                "value": "Shut"
              },
              {
                "name": "Leaf",
                "value": "Normal"
              },
              {
                "name": "Grass",
                "value": "None"
              },
              {
                "name": "Stream",
                "value": false
              },
              {
                "name": "Spacing",
                "value": "Normal"
              },
              {
                "name": "Palette",
                "value": "Sunset"
              },
              {
                "name": "Panels",
                "value": 1
              },
              {
                "name": "Layout",
                "value": "Square"
              }
            ],
            "decimals": 0,
            "symbol": "GENTK",
            "version": "0.2"
          },
          "duplicate": false,
          "activeListing": {
            "id": 969775,
            "version": 1,
            "price": 85000000,
            "__typename": "Listing"
          },
          "owner": {
            "id": "tz1QEiVSX2m1DGUZEfJUGZBRXtx4aZszmXfk",
            "name": "ABRI",
            "flag": "NONE",
            "avatarUri": "ipfs://QmYzQ9cLrSHNKsSTuc9BWdcrXG32n3uvrZB5R8teQ27tHK",
            "__typename": "User"
          },
          "issuer": {
            "flag": "NONE",
            "name": "Dreamcatcher Forest",
            "author": {
              "id": "tz1NpUTYsVB2Hdci6ycdWdTz66GvR5oLqQp8",
              "name": "iRyanBell",
              "type": "REGULAR",
              "avatarUri": "ipfs://QmWQUqBNxDyGHhMKGH7f7MJyP9TPeHRPX411knUXbmUKnv",
              "flag": "VERIFIED",
              "collaborators": null,
              "__typename": "User"
            },
            "__typename": "GenerativeToken"
          },
          "__typename": "Objkt"
        },
        "__typename": "Listing"
      },
      {
        "id": 969774,
        "version": 1,
        "price": 15000000,
        "objkt": {
          "id": "FX1-48804",
          "version": 2,
          "name": "Blockchain Automaton #152",
          "slug": "blockchain-automaton-152",
          "metadata": {
            "name": "Blockchain Automaton #152",
            "iterationHash": "oo2FAbQvj3CgmAqXuzGZTnYmNjkTrdV25zoszfVp6J9iKQMqDMV",
            "description": "This experimental project involves an on-chain cellular automaton. The features and cellular automaton rules are derived from the minter's address. Being the first (unto my knowledge) project on fxhash that generates the artwork completely on chain, it seemed fitting to draw inspiration from one of the first projects on fxhash, \"RGB Elementary Cellular Automaton\".\n\nWhat is this?\n\nAn experimental generative token that integrates on-chain generation, and on-chain storage of the artwork. This is accomplished using a custom smart contract. The artwork is generated using the generate_on_chain entrypoint in KT1GRFujk5m6feK7gJcqCU7ijJkFgx5JigEt, and the generated image is subsequently stored on-chain as a byte-string of pixels (row-major order) in the tokens bigmap in KT1GRFujk5m6feK7gJcqCU7ijJkFgx5JigEt.\n\nHow does this work?\n\nSmart contracts have a default entrypoint which is automatically called when XTZ is sent to the contract. By using a smart contract as the primary address, the default entrypoint will be called every time a token is minted. Of course, to prevent accounts from bypassing the fxhash contracts and sending XTZ directly to the smart contract, generating and storing the artwork on-chain, the smart contract checks that an fxhash contract is the account sending XTZ. In this smart contract, the default entrypoint immediately calls the generate_on_chain entrypoint for the sole purpose of making the generation process more apparent on indexers like tzkt.\n\nIn order to make this project compatible with fxhash, the artwork produced by the code submitted to fxhash must be identical to that which is produced by the generative algorithm within the smart contract. At the time of development, the minter's address is the only piece of information which is readily accessible via the fxhash snippet API and in the smart contract. As a result, each account can only generate a single unique artwork (this is enforced by the contract). In the future, this issue could be solved if the fxhash snippet API provided access to the iteration number, as the smart contract could also keep track of this information quite easily.\n\nConsequently, collectors who wish to collect more than one iteration must create additional accounts to mint. The tokens can then be subsequently transferred as per usual.\n\nWhy is the variations preview disabled?\n\nBecause the minter's address is the source of randomness for the generated artwork, not the hash provided by fxhash, changing the hash in the variations preview will have no effect. To see different variations of the artwork you need to modify the fxminter URL parameter in live preview mode.\n\nWhy does the mint button not work on the fxhash frontend?\n\nCurrently, the fxhash frontend has a default storage limit for mint operations that is less than what is required to store the generated image on chain. As a result, the mint button will fail on the fxhash frontend. To get around this, you can mint this token on a mini-website I created (https://blockchain-automaton.netlify.app/), or on Better Call Dev, or by injecting the transaction directly onto the blockchain.\n\nBut Why?\n\nBecause experimentation is fun.",
            "tags": [
              "onchain",
              "cellular automaton",
              "blockchain",
              "pixelart"
            ],
            "generatorUri": "ipfs://Qmeb7huzBQZ5KTo2qqc48Kg5GEumYDKbXMN9UQXkD5Zz5Y",
            "artifactUri": "ipfs://Qmeb7huzBQZ5KTo2qqc48Kg5GEumYDKbXMN9UQXkD5Zz5Y/?fxhash=oo2FAbQvj3CgmAqXuzGZTnYmNjkTrdV25zoszfVp6J9iKQMqDMV&fxminter=tz1QEiVSX2m1DGUZEfJUGZBRXtx4aZszmXfk",
            "displayUri": "ipfs://QmcYjeFXxWW3H2eirPSYVu13Qk3u3P2btrfcBEwjLSxQtk",
            "thumbnailUri": "ipfs://QmYUMFrj4h2o1NgVBeHw6q1SzSmKnaWTyR6qyybw84HwCp",
            "authenticityHash": "ac9d817b42d31be65f14a50616cc4fa7a89cf165aea6ad3b44e700045f84a581",
            "attributes": [
              {
                "name": "mode",
                "value": "Vertical"
              },
              {
                "name": "palette",
                "value": 16
              },
              {
                "name": "size",
                "value": "16x16"
              }
            ],
            "decimals": 0,
            "symbol": "GENTK",
            "version": "0.2"
          },
          "duplicate": false,
          "activeListing": {
            "id": 969774,
            "version": 1,
            "price": 15000000,
            "__typename": "Listing"
          },
          "owner": {
            "id": "tz1QEiVSX2m1DGUZEfJUGZBRXtx4aZszmXfk",
            "name": "ABRI",
            "flag": "NONE",
            "avatarUri": "ipfs://QmYzQ9cLrSHNKsSTuc9BWdcrXG32n3uvrZB5R8teQ27tHK",
            "__typename": "User"
          },
          "issuer": {
            "flag": "NONE",
            "name": "Blockchain Automaton",
            "author": {
              "id": "tz1QvV3jVPWrJSdDy9ePZBnhGL8bAoQFFBPv",
              "name": "Extracurricular Activities",
              "type": "REGULAR",
              "avatarUri": "ipfs://QmahpnFUbW9NWQjUzNLUxxYLszZC2eeNo5mmRPikJLYge5",
              "flag": "VERIFIED",
              "collaborators": null,
              "__typename": "User"
            },
            "__typename": "GenerativeToken"
          },
          "__typename": "Objkt"
        },
        "__typename": "Listing"
      },
      {
        "id": 969773,
        "version": 1,
        "price": 690000000,
        "objkt": {
          "id": "FX0-682870",
          "version": 1,
          "name": "Desert Sun Rising #26",
          "slug": "desert-sun-rising-26",
          "metadata": {
            "name": "Desert Sun Rising #26",
            "iterationHash": "onsGKNWDMfm9yscYqU9HoSuzT1Nh8CR7ZhpQfcyWwbNwci9p47W",
            "description": "As the sun rises, the world comes alive with color, converting sand and stone into a sanctuary.\n\nFeatures include color palettes, stars, and vegetation density.\n\np5.js\n",
            "tags": [
              "landscape",
              "p5.js",
              "desert"
            ],
            "generatorUri": "ipfs://QmTJmMaNkQApxxRfg6escZW93oz5zcSHzsSZNQrXVUmnPt",
            "artifactUri": "ipfs://QmTJmMaNkQApxxRfg6escZW93oz5zcSHzsSZNQrXVUmnPt?fxhash=onsGKNWDMfm9yscYqU9HoSuzT1Nh8CR7ZhpQfcyWwbNwci9p47W",
            "displayUri": "ipfs://QmcB7V8PJ9hbzPVmxuHdryR7NtD8dZ6T9BZXBCp8c57TdH",
            "thumbnailUri": "ipfs://QmTTN3gc8gZf1WBNQVbug4n4NYbWETfq7G5GmATCTQHURf",
            "authenticityHash": "990166e5bea076b8b4503bc92cc40903ba4b459a9d67ae5ff1b02dcd5156f294",
            "attributes": [
              {
                "name": "Palette",
                "value": "Mesa"
              },
              {
                "name": "Stars",
                "value": true
              },
              {
                "name": "Plants",
                "value": 7
              }
            ],
            "decimals": 0,
            "symbol": "GENTK",
            "version": "0.2"
          },
          "duplicate": false,
          "activeListing": {
            "id": 969773,
            "version": 1,
            "price": 690000000,
            "__typename": "Listing"
          },
          "owner": {
            "id": "tz1Yo3Hpcogroye64Ft5Tmnv4zXKcP5GvVB5",
            "name": "The Cellar",
            "flag": "NONE",
            "avatarUri": "ipfs://QmdtRKhSYSdPN1vLhaDxABwvqEqaFTaJt1novDgxWWf86b",
            "__typename": "User"
          },
          "issuer": {
            "flag": "NONE",
            "name": "Desert Sun Rising",
            "author": {
              "id": "tz1bzg9xNB4heuF41sLfrdt1QmqrJTDQqDwN",
              "name": "mjlindow",
              "type": "REGULAR",
              "avatarUri": "ipfs://QmaoXfG6mAJfve8v4DnM7ZtaZf3Qn9PSDyoyYHNSkEcpLz",
              "flag": "VERIFIED",
              "collaborators": null,
              "__typename": "User"
            },
            "__typename": "GenerativeToken"
          },
          "__typename": "Objkt"
        },
        "__typename": "Listing"
      },
      {
        "id": 969772,
        "version": 1,
        "price": 14000000,
        "objkt": {
          "id": "FX0-967058",
          "version": 1,
          "name": "Fever Dream Fairy Fantasy Forest #205",
          "slug": "fever-dream-fairy-fantasy-forest-205",
          "metadata": {
            "name": "Fever Dream Fairy Fantasy Forest #205",
            "iterationHash": "opX8iZoerG5rgZJge1HcdVMWc5oBoou1atStPWuBkr57ZDm83GX",
            "description": "A strange place where you can't tell the trees from the sky, the clouds from the shrubs, or where your body ends and the ground begins.\n\nPress [s] in live view to capture a 2048x2048 screenshot\n\n\n\nXALTED 2022",
            "tags": [
              "cables",
              "forest",
              "landscape",
              "figurative",
              "aquatint",
              "plants",
              "fantasy"
            ],
            "generatorUri": "ipfs://QmYzs1nWg2gcAR718MHamFC8j69U6RmTdxnfb2Xrju1ghJ",
            "artifactUri": "ipfs://QmYzs1nWg2gcAR718MHamFC8j69U6RmTdxnfb2Xrju1ghJ?fxhash=opX8iZoerG5rgZJge1HcdVMWc5oBoou1atStPWuBkr57ZDm83GX",
            "displayUri": "ipfs://QmTArnr1NWaaGnCTDwdueWP8aMAJGiTN3HmPgUbGpGjQQq",
            "thumbnailUri": "ipfs://QmSv3YSoDLAuJx2NPHmEVk1Mw8d88Bqp4xw6bTKNCdX9NW",
            "authenticityHash": "78fca523b7e1eddd3f5cd816ae9bd9c33577ca5b1e26d32dfd8250b754fb19b8",
            "attributes": [
              {
                "name": "Color Palette",
                "value": "Pure Magenta"
              },
              {
                "name": "Trees",
                "value": "Few"
              },
              {
                "name": "Grass Patches",
                "value": "Sparse"
              },
              {
                "name": "Rocks",
                "value": "Abundant"
              },
              {
                "name": "Tree Size",
                "value": "Medium"
              },
              {
                "name": "Tree Inclination",
                "value": -0.9
              },
              {
                "name": "Ground Inclination",
                "value": -4
              }
            ],
            "decimals": 0,
            "symbol": "GENTK",
            "version": "0.2"
          },
          "duplicate": false,
          "activeListing": {
            "id": 969772,
            "version": 1,
            "price": 14000000,
            "__typename": "Listing"
          },
          "owner": {
            "id": "tz1QEiVSX2m1DGUZEfJUGZBRXtx4aZszmXfk",
            "name": "ABRI",
            "flag": "NONE",
            "avatarUri": "ipfs://QmYzQ9cLrSHNKsSTuc9BWdcrXG32n3uvrZB5R8teQ27tHK",
            "__typename": "User"
          },
          "issuer": {
            "flag": "NONE",
            "name": "Fever Dream Fairy Fantasy Forest",
            "author": {
              "id": "tz1f4imKZTYTJ98bWukhSfXnki87LgV3xEAA",
              "name": "XALTED",
              "type": "REGULAR",
              "avatarUri": "ipfs://QmVxVYSEhPe2kUWMyoryiVtkTY8HF9hkiUWnD8CeDpiibq",
              "flag": "VERIFIED",
              "collaborators": null,
              "__typename": "User"
            },
            "__typename": "GenerativeToken"
          },
          "__typename": "Objkt"
        },
        "__typename": "Listing"
      },
      {
        "id": 969771,
        "version": 1,
        "price": 3000000,
        "objkt": {
          "id": "FX0-1298320",
          "version": 1,
          "name": "Annum #7757",
          "slug": "annum-7757",
          "metadata": {
            "name": "Annum #7757",
            "iterationHash": "oodRBaBBV98wNwNFjdVsHCPLwFxcx3G9HYSWruyyRccjvrytSWN",
            "description": "This project is being released in celebration of the 1 year aniversary of Achromat, my first release on fxhash. In addition to being inspired by Achromat, aspects of other previous projects have been incorporated. My deepest gratitude to all who have collected my work over the past year.\n\nIn live mode, add &size=<YOUR_PIXEL_SIZE> to change the pixel size of the image for export (Right click to save). For example, &size=4000 will set the width of the image to be 4000 pixels.\n\n50% of primary sales go to Savepakistan.",
            "tags": [
              "generative",
              "geometric",
              "colorful",
              "abstract",
              "savepakistan"
            ],
            "generatorUri": "ipfs://QmYUJeVtHaC5hjcckV2xXoXUfo6YtqpEKrmFQS74Poq6N5",
            "artifactUri": "ipfs://QmYUJeVtHaC5hjcckV2xXoXUfo6YtqpEKrmFQS74Poq6N5?fxhash=oodRBaBBV98wNwNFjdVsHCPLwFxcx3G9HYSWruyyRccjvrytSWN",
            "displayUri": "ipfs://QmXHxY6PKLrXFoMXrHEgfkiczqoweWmC7jWBhqKWXzg3Qc",
            "thumbnailUri": "ipfs://QmPerHyw93tiz2CHyCTuJmRfv4jzkgg94p9eBZyTvfRh2X",
            "authenticityHash": "c002a506e5210293b56b4f5dbc90732e4b7dedb30c230607d8a9634fdfb0af91",
            "attributes": [
              {
                "name": "Arrangement",
                "value": "Vertical Noise"
              },
              {
                "name": "Borders",
                "value": true
              },
              {
                "name": "Cross Hatching",
                "value": false
              },
              {
                "name": "Color Palette",
                "value": 9
              },
              {
                "name": "Density",
                "value": "Normal"
              },
              {
                "name": "Particle Size",
                "value": "Small"
              },
              {
                "name": "SD Shader",
                "value": false
              },
              {
                "name": "SD Shader Mode",
                "value": "n/a"
              },
              {
                "name": "SD Shader RGB",
                "value": "n/a"
              },
              {
                "name": "SD Shader Number of Layers",
                "value": "n/a"
              },
              {
                "name": "SD Shader Erosion Probability",
                "value": "n/a"
              }
            ],
            "decimals": 0,
            "symbol": "GENTK",
            "version": "0.2"
          },
          "duplicate": false,
          "activeListing": {
            "id": 969771,
            "version": 1,
            "price": 3000000,
            "__typename": "Listing"
          },
          "owner": {
            "id": "tz1QEiVSX2m1DGUZEfJUGZBRXtx4aZszmXfk",
            "name": "ABRI",
            "flag": "NONE",
            "avatarUri": "ipfs://QmYzQ9cLrSHNKsSTuc9BWdcrXG32n3uvrZB5R8teQ27tHK",
            "__typename": "User"
          },
          "issuer": {
            "flag": "NONE",
            "name": "Annum",
            "author": {
              "id": "tz1RkYY3jr1ocuPdQqrRefr5FqoawKQsmBmD",
              "name": "Landlines Art",
              "type": "REGULAR",
              "avatarUri": "ipfs://QmaDnzJ8wPMQ9uLAHDsCfnn8g7U13zvKNRUiPLgUnepxCQ",
              "flag": "VERIFIED",
              "collaborators": null,
              "__typename": "User"
            },
            "__typename": "GenerativeToken"
          },
          "__typename": "Objkt"
        },
        "__typename": "Listing"
      },
      {
        "id": 969770,
        "version": 1,
        "price": 15000000,
        "objkt": {
          "id": "FX0-1297751",
          "version": 1,
          "name": "Annum #7240",
          "slug": "annum-7240",
          "metadata": {
            "name": "Annum #7240",
            "iterationHash": "ooMWL1hk1jFfjvyKsWuKRxtxw6fm4ztK86WPnzsuUezzh4ga743",
            "description": "This project is being released in celebration of the 1 year aniversary of Achromat, my first release on fxhash. In addition to being inspired by Achromat, aspects of other previous projects have been incorporated. My deepest gratitude to all who have collected my work over the past year.\n\nIn live mode, add &size=<YOUR_PIXEL_SIZE> to change the pixel size of the image for export (Right click to save). For example, &size=4000 will set the width of the image to be 4000 pixels.\n\n50% of primary sales go to Savepakistan.",
            "tags": [
              "generative",
              "geometric",
              "colorful",
              "abstract",
              "savepakistan"
            ],
            "generatorUri": "ipfs://QmYUJeVtHaC5hjcckV2xXoXUfo6YtqpEKrmFQS74Poq6N5",
            "artifactUri": "ipfs://QmYUJeVtHaC5hjcckV2xXoXUfo6YtqpEKrmFQS74Poq6N5?fxhash=ooMWL1hk1jFfjvyKsWuKRxtxw6fm4ztK86WPnzsuUezzh4ga743",
            "displayUri": "ipfs://Qmd4PtdqSy5UU1gs5sVcjYo2hcCwBWUndGpR16p3PdM1j7",
            "thumbnailUri": "ipfs://QmRhKpiXFLdmu6y7sX7GuTSvUXyLoWpa2n4foaCQHoeG1X",
            "authenticityHash": "e2e2c46c83d6264b90a1b93a567353d14583029ba944d87bbf524c06d05b790f",
            "attributes": [
              {
                "name": "Arrangement",
                "value": "Skewed"
              },
              {
                "name": "Borders",
                "value": true
              },
              {
                "name": "Cross Hatching",
                "value": false
              },
              {
                "name": "Color Palette",
                "value": 9
              },
              {
                "name": "Density",
                "value": "Normal"
              },
              {
                "name": "Particle Size",
                "value": "Small"
              },
              {
                "name": "SD Shader",
                "value": true
              },
              {
                "name": "SD Shader Mode",
                "value": "Wobble"
              },
              {
                "name": "SD Shader RGB",
                "value": false
              },
              {
                "name": "SD Shader Number of Layers",
                "value": 64
              },
              {
                "name": "SD Shader Erosion Probability",
                "value": "Medium"
              }
            ],
            "decimals": 0,
            "symbol": "GENTK",
            "version": "0.2"
          },
          "duplicate": false,
          "activeListing": {
            "id": 969770,
            "version": 1,
            "price": 15000000,
            "__typename": "Listing"
          },
          "owner": {
            "id": "tz1QEiVSX2m1DGUZEfJUGZBRXtx4aZszmXfk",
            "name": "ABRI",
            "flag": "NONE",
            "avatarUri": "ipfs://QmYzQ9cLrSHNKsSTuc9BWdcrXG32n3uvrZB5R8teQ27tHK",
            "__typename": "User"
          },
          "issuer": {
            "flag": "NONE",
            "name": "Annum",
            "author": {
              "id": "tz1RkYY3jr1ocuPdQqrRefr5FqoawKQsmBmD",
              "name": "Landlines Art",
              "type": "REGULAR",
              "avatarUri": "ipfs://QmaDnzJ8wPMQ9uLAHDsCfnn8g7U13zvKNRUiPLgUnepxCQ",
              "flag": "VERIFIED",
              "collaborators": null,
              "__typename": "User"
            },
            "__typename": "GenerativeToken"
          },
          "__typename": "Objkt"
        },
        "__typename": "Listing"
      },
      {
        "id": 969769,
        "version": 1,
        "price": 4000000,
        "objkt": {
          "id": "FX0-1499697",
          "version": 1,
          "name": "Unbounded #26",
          "slug": "unbounded-26-13455359-c17e-4914-bf08-7a0fd44ef7f4",
          "metadata": {
            "name": "Unbounded #26",
            "iterationHash": "opDWs9p7eJSeCvaBfGdTh41S3mKvQaBpBDx7xMo4Yfqt3FZieYr",
            "description": "Unbounded, untethered,\nA reflection of the unfettered.\nA canvas of the artist's creation,\nFree to express, free from limitation.\n\nThis is a generative piece made in p5.js.",
            "tags": [
              "generative",
              "art",
              "p5.js",
              "unbounded"
            ],
            "generatorUri": "ipfs://QmcC5KKaJJ4xAYnnfYrFrvtwJd6LtvvWwXh3zHRzjfMHHx",
            "artifactUri": "ipfs://QmcC5KKaJJ4xAYnnfYrFrvtwJd6LtvvWwXh3zHRzjfMHHx?fxhash=opDWs9p7eJSeCvaBfGdTh41S3mKvQaBpBDx7xMo4Yfqt3FZieYr",
            "displayUri": "ipfs://QmadmrGNp15VcfLZQpUWVm32quAnRwuimyNHpQuFQHjT4L",
            "thumbnailUri": "ipfs://Qma2asgYPSvXhvzhANNSNMLPfJz1crDiW7FzYXVFaG69BH",
            "authenticityHash": "678406629ee8d1283c858a98f71a909d6f91f162e5a9a84830501d73b6bee983",
            "attributes": true,
            "decimals": 0,
            "symbol": "GENTK",
            "version": "0.2"
          },
          "duplicate": false,
          "activeListing": {
            "id": 969769,
            "version": 1,
            "price": 4000000,
            "__typename": "Listing"
          },
          "owner": {
            "id": "tz1QEiVSX2m1DGUZEfJUGZBRXtx4aZszmXfk",
            "name": "ABRI",
            "flag": "NONE",
            "avatarUri": "ipfs://QmYzQ9cLrSHNKsSTuc9BWdcrXG32n3uvrZB5R8teQ27tHK",
            "__typename": "User"
          },
          "issuer": {
            "flag": "NONE",
            "name": "Unbounded",
            "author": {
              "id": "tz1T2VE13QU11geDQ7SzgnvX1VJpKqi8ssPS",
              "name": "Sollevera",
              "type": "REGULAR",
              "avatarUri": "ipfs://QmNMKw9MxG2cPhQ6gcnQqgwasW1SbRmitiv5BfTrvT5K3f",
              "flag": "NONE",
              "collaborators": null,
              "__typename": "User"
            },
            "__typename": "GenerativeToken"
          },
          "__typename": "Objkt"
        },
        "__typename": "Listing"
      },
      {
        "id": 969768,
        "version": 1,
        "price": 8000000,
        "objkt": {
          "id": "FX0-1505239",
          "version": 1,
          "name": "Specter of Fears #99",
          "slug": "specter-of-fears-99",
          "metadata": {
            "name": "Specter of Fears #99",
            "iterationHash": "oooxLxo72UYF4yStuj27a4P5RyRvwWP7dBxnKQwJ8haFFRdwudj",
            "description": "In the dreamlike landscape of our minds, the specter of fears is like a wraith, ever-present and ethereal. It whispers in our ear, reminding us of all the things we dare not face. It is a shadow that falls across our hearts, casting a pall of doubt and uncertainty. But even as it haunts us, we must remember that it is a part of us. We must learn to accept its presence, and to use it to our advantage. For fear is not always a curse, it is a guide that shows us where we must grow stronger. It is a companion that walks with us through the dark night, illuminating the path ahead. By embracing our fears, we find the courage to face them, and to overcome them. We find the strength to live fully, to love fiercely, and to pursue our dreams with abandon.\n\nControls :\n\n‚Ä¢ Press 1, 2, 3, or 4 to make a capture and download a PNG with a resolution of x1, x2, x3 or x4.\n\n‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî\n\nSpecter of Fears by Ferdinand Dervieux, 2023\nMade with Unity\nLicense: CC BY-NC-SA 4.0",
            "tags": [
              "generative",
              "creativecoding",
              "specter",
              "fears",
              "unity",
              "art"
            ],
            "generatorUri": "ipfs://QmTsFccB1JLXEgpLRU6XFHCfGTX7f6fcf7gpHv1nt4yy4E",
            "artifactUri": "ipfs://QmTsFccB1JLXEgpLRU6XFHCfGTX7f6fcf7gpHv1nt4yy4E?fxhash=oooxLxo72UYF4yStuj27a4P5RyRvwWP7dBxnKQwJ8haFFRdwudj",
            "displayUri": "ipfs://QmTsqp54EdKA1cFs7MK7B6JCEVoUFLv8siY14aZZ6PPoZH",
            "thumbnailUri": "ipfs://QmTdG6te7o1HCi8pNLYjsCHijFp3gzjaT9VM3oGYSNzHaR",
            "authenticityHash": "d7f4452cc8b51244ff30984a11543ee9c7d521cf6a6d9fedba440b1c3ad56452",
            "attributes": [],
            "decimals": 0,
            "symbol": "GENTK",
            "version": "0.2"
          },
          "duplicate": false,
          "activeListing": {
            "id": 969768,
            "version": 1,
            "price": 8000000,
            "__typename": "Listing"
          },
          "owner": {
            "id": "tz1QEiVSX2m1DGUZEfJUGZBRXtx4aZszmXfk",
            "name": "ABRI",
            "flag": "NONE",
            "avatarUri": "ipfs://QmYzQ9cLrSHNKsSTuc9BWdcrXG32n3uvrZB5R8teQ27tHK",
            "__typename": "User"
          },
          "issuer": {
            "flag": "NONE",
            "name": "Specter of Fears",
            "author": {
              "id": "tz1feMcGwjomdn1mRCpZh9pgjMkBZkRy7jEZ",
              "name": "Ferdinand Dervieux",
              "type": "REGULAR",
              "avatarUri": "ipfs://QmdB6uUvM6b7AVP8XoMyo3b11fSjAfQGrCovM3VqA9QknV",
              "flag": "VERIFIED",
              "collaborators": null,
              "__typename": "User"
            },
            "__typename": "GenerativeToken"
          },
          "__typename": "Objkt"
        },
        "__typename": "Listing"
      },
      {
        "id": 969767,
        "version": 1,
        "price": 8000000,
        "objkt": {
          "id": "FX0-1505233",
          "version": 1,
          "name": "Specter of Fears #93",
          "slug": "specter-of-fears-93",
          "metadata": {
            "name": "Specter of Fears #93",
            "iterationHash": "onp5MHbeFvZBQGBkko3eCKPHhLk8xedvEhZnJEkDNit96biwZwk",
            "description": "In the dreamlike landscape of our minds, the specter of fears is like a wraith, ever-present and ethereal. It whispers in our ear, reminding us of all the things we dare not face. It is a shadow that falls across our hearts, casting a pall of doubt and uncertainty. But even as it haunts us, we must remember that it is a part of us. We must learn to accept its presence, and to use it to our advantage. For fear is not always a curse, it is a guide that shows us where we must grow stronger. It is a companion that walks with us through the dark night, illuminating the path ahead. By embracing our fears, we find the courage to face them, and to overcome them. We find the strength to live fully, to love fiercely, and to pursue our dreams with abandon.\n\nControls :\n\n‚Ä¢ Press 1, 2, 3, or 4 to make a capture and download a PNG with a resolution of x1, x2, x3 or x4.\n\n‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî\n\nSpecter of Fears by Ferdinand Dervieux, 2023\nMade with Unity\nLicense: CC BY-NC-SA 4.0",
            "tags": [
              "generative",
              "creativecoding",
              "specter",
              "fears",
              "unity",
              "art"
            ],
            "generatorUri": "ipfs://QmTsFccB1JLXEgpLRU6XFHCfGTX7f6fcf7gpHv1nt4yy4E",
            "artifactUri": "ipfs://QmTsFccB1JLXEgpLRU6XFHCfGTX7f6fcf7gpHv1nt4yy4E?fxhash=onp5MHbeFvZBQGBkko3eCKPHhLk8xedvEhZnJEkDNit96biwZwk",
            "displayUri": "ipfs://QmZ9qZgTSSiTUiP7h5jZXgamFYNXrJCfCqgN9Vxi1duQvQ",
            "thumbnailUri": "ipfs://QmaP713zyVYvQ7p1Ctu4afZ1beMvVSfjyEjCfYgAqnF65X",
            "authenticityHash": "2c9937269337764874161a44fa192299b683974a52f1b252b7d66b7214b765fd",
            "attributes": [],
            "decimals": 0,
            "symbol": "GENTK",
            "version": "0.2"
          },
          "duplicate": false,
          "activeListing": {
            "id": 969767,
            "version": 1,
            "price": 8000000,
            "__typename": "Listing"
          },
          "owner": {
            "id": "tz1QEiVSX2m1DGUZEfJUGZBRXtx4aZszmXfk",
            "name": "ABRI",
            "flag": "NONE",
            "avatarUri": "ipfs://QmYzQ9cLrSHNKsSTuc9BWdcrXG32n3uvrZB5R8teQ27tHK",
            "__typename": "User"
          },
          "issuer": {
            "flag": "NONE",
            "name": "Specter of Fears",
            "author": {
              "id": "tz1feMcGwjomdn1mRCpZh9pgjMkBZkRy7jEZ",
              "name": "Ferdinand Dervieux",
              "type": "REGULAR",
              "avatarUri": "ipfs://QmdB6uUvM6b7AVP8XoMyo3b11fSjAfQGrCovM3VqA9QknV",
              "flag": "VERIFIED",
              "collaborators": null,
              "__typename": "User"
            },
            "__typename": "GenerativeToken"
          },
          "__typename": "Objkt"
        },
        "__typename": "Listing"
      },
      {
        "id": 969766,
        "version": 1,
        "price": 8000000,
        "objkt": {
          "id": "FX0-1496424",
          "version": 1,
          "name": "Fragments of Metropolis #22",
          "slug": "fragments-of-metropolis-22",
          "metadata": {
            "name": "Fragments of Metropolis #22",
            "iterationHash": "opPjYupDyXBtJenTdMictasdUFqv9fxiAUdwW78i7jiqiA9x2ur",
            "description": "Made with P5\nBy Olivier Mattia\nTwitter: @0xm4tt1a.\n\nKEYS:\ns: save png\n1-8: change resolution\n\nCopyright (c) 2023 0xma.\nLicensed under CC BY-NC-SA 4.0",
            "tags": [
              "0xma",
              "0xm4",
              "olivier",
              "mattia",
              "metropolis",
              "fragments"
            ],
            "generatorUri": "ipfs://QmS5SscU3DTptLdQYoEWmFftcSGxRBs9E2HViYANJr9rVB",
            "artifactUri": "ipfs://QmS5SscU3DTptLdQYoEWmFftcSGxRBs9E2HViYANJr9rVB?fxhash=opPjYupDyXBtJenTdMictasdUFqv9fxiAUdwW78i7jiqiA9x2ur",
            "displayUri": "ipfs://Qma5yENZpVSE6MENBeDJma7M5sSJjzDqRZjaXjcxu19hzs",
            "thumbnailUri": "ipfs://QmdJHDggdJBTXqWtV9DSr2yZxjU46JMr5HUeF2ESKEZG6P",
            "authenticityHash": "36c785c3bcf10184a4c1ff8f9385625342b37a49a7345b3113bd578db70f5531",
            "attributes": true,
            "decimals": 0,
            "symbol": "GENTK",
            "version": "0.2"
          },
          "duplicate": false,
          "activeListing": {
            "id": 969766,
            "version": 1,
            "price": 8000000,
            "__typename": "Listing"
          },
          "owner": {
            "id": "tz1QEiVSX2m1DGUZEfJUGZBRXtx4aZszmXfk",
            "name": "ABRI",
            "flag": "NONE",
            "avatarUri": "ipfs://QmYzQ9cLrSHNKsSTuc9BWdcrXG32n3uvrZB5R8teQ27tHK",
            "__typename": "User"
          },
          "issuer": {
            "flag": "NONE",
            "name": "Fragments of Metropolis",
            "author": {
              "id": "tz1WtbcACsCduN22r4jup9ZcpTa8MX5ibAdV",
              "name": "0xma",
              "type": "REGULAR",
              "avatarUri": "ipfs://QmWYJSX8wcgLFeYnpkG8m3TjYMAPmMhfV4szZBG7mMuJpH",
              "flag": "VERIFIED",
              "collaborators": null,
              "__typename": "User"
            },
            "__typename": "GenerativeToken"
          },
          "__typename": "Objkt"
        },
        "__typename": "Listing"
      },
      {
        "id": 969765,
        "version": 1,
        "price": 8000000,
        "objkt": {
          "id": "FX0-1496462",
          "version": 1,
          "name": "Fragments of Metropolis #59",
          "slug": "fragments-of-metropolis-59",
          "metadata": {
            "name": "Fragments of Metropolis #59",
            "iterationHash": "opW67wvizHU6ZSiMsVGDbGv1CzudxM5A1AoH1692RoRNdZN8KAk",
            "description": "Made with P5\nBy Olivier Mattia\nTwitter: @0xm4tt1a.\n\nKEYS:\ns: save png\n1-8: change resolution\n\nCopyright (c) 2023 0xma.\nLicensed under CC BY-NC-SA 4.0",
            "tags": [
              "0xma",
              "0xm4",
              "olivier",
              "mattia",
              "metropolis",
              "fragments"
            ],
            "generatorUri": "ipfs://QmS5SscU3DTptLdQYoEWmFftcSGxRBs9E2HViYANJr9rVB",
            "artifactUri": "ipfs://QmS5SscU3DTptLdQYoEWmFftcSGxRBs9E2HViYANJr9rVB?fxhash=opW67wvizHU6ZSiMsVGDbGv1CzudxM5A1AoH1692RoRNdZN8KAk",
            "displayUri": "ipfs://QmUhzJZF2ZtxHNzzPRFT7dmdEdxGLt1Dt9zR5vre5shSzG",
            "thumbnailUri": "ipfs://QmboBXYisRVVbR3gNoAQ8iHphQYPQmPTosNb6BhHb4U8ss",
            "authenticityHash": "137f5d636f35200f5f11a3d3d1c2c7a688ac74b77c21bbc402cea385cb03473b",
            "attributes": true,
            "decimals": 0,
            "symbol": "GENTK",
            "version": "0.2"
          },
          "duplicate": false,
          "activeListing": {
            "id": 969765,
            "version": 1,
            "price": 8000000,
            "__typename": "Listing"
          },
          "owner": {
            "id": "tz1QEiVSX2m1DGUZEfJUGZBRXtx4aZszmXfk",
            "name": "ABRI",
            "flag": "NONE",
            "avatarUri": "ipfs://QmYzQ9cLrSHNKsSTuc9BWdcrXG32n3uvrZB5R8teQ27tHK",
            "__typename": "User"
          },
          "issuer": {
            "flag": "NONE",
            "name": "Fragments of Metropolis",
            "author": {
              "id": "tz1WtbcACsCduN22r4jup9ZcpTa8MX5ibAdV",
              "name": "0xma",
              "type": "REGULAR",
              "avatarUri": "ipfs://QmWYJSX8wcgLFeYnpkG8m3TjYMAPmMhfV4szZBG7mMuJpH",
              "flag": "VERIFIED",
              "collaborators": null,
              "__typename": "User"
            },
            "__typename": "GenerativeToken"
          },
          "__typename": "Objkt"
        },
        "__typename": "Listing"
      },
      {
        "id": 969764,
        "version": 1,
        "price": 30000000,
        "objkt": {
          "id": "FX0-602715",
          "version": 1,
          "name": "Gaiatica #26",
          "slug": "gaiatica-26",
          "metadata": {
            "name": "Gaiatica #26",
            "iterationHash": "op6Uaj2jMdUZJqfpTkxDDFeyjUgtLSksLmja12s79Z49nNSVRg4",
            "description": "Code of earth.\n\nTreat yours well.\n\n\nPress 's' in fullscreen mode to save a 2400 x 4000 resolution image of the piece.",
            "tags": [
              "abstract",
              "black and white",
              "monotone",
              "gesture",
              "gestural",
              "minimal",
              "paint",
              "painterly",
              "earth",
              "nature"
            ],
            "generatorUri": "ipfs://QmPP3qDACLKRPfVUqsoXjfRDBKBwcjyoHFfMSuvrgSKMTD",
            "artifactUri": "ipfs://QmPP3qDACLKRPfVUqsoXjfRDBKBwcjyoHFfMSuvrgSKMTD?fxhash=op6Uaj2jMdUZJqfpTkxDDFeyjUgtLSksLmja12s79Z49nNSVRg4",
            "displayUri": "ipfs://QmT998d6yooN4a4BECXNECn8PhMzMhjKpYHhinNhGCHamR",
            "thumbnailUri": "ipfs://QmcLgY3oh4Vp45sEGFKafkEBScmvfHLmWQw3pDbAbBPXqE",
            "authenticityHash": "cf902f73b11001cef0cbd394b313d7eeb3fd0198dcc08308a70845df33c7a7e4",
            "attributes": [
              {
                "name": "thickness",
                "value": 90
              },
              {
                "name": "passes",
                "value": 2
              },
              {
                "name": "force",
                "value": "hurracane"
              },
              {
                "name": "nature",
                "value": "chaotic"
              },
              {
                "name": "pattern",
                "value": "magma"
              },
              {
                "name": "atoms",
                "value": "scales"
              },
              {
                "name": "alignment",
                "value": "dawn"
              },
              {
                "name": "ascention",
                "value": "upward"
              }
            ],
            "decimals": 0,
            "symbol": "GENTK",
            "version": "0.2"
          },
          "duplicate": false,
          "activeListing": {
            "id": 969764,
            "version": 1,
            "price": 30000000,
            "__typename": "Listing"
          },
          "owner": {
            "id": "tz1QEiVSX2m1DGUZEfJUGZBRXtx4aZszmXfk",
            "name": "ABRI",
            "flag": "NONE",
            "avatarUri": "ipfs://QmYzQ9cLrSHNKsSTuc9BWdcrXG32n3uvrZB5R8teQ27tHK",
            "__typename": "User"
          },
          "issuer": {
            "flag": "NONE",
            "name": "Gaiatica",
            "author": {
              "id": "tz1cEpFKxyiEKvFnGPAMfUyEuvbvmNJZD65D",
              "name": "sfbatchelor",
              "type": "REGULAR",
              "avatarUri": "ipfs://QmRCvJPZn9B3BR1jTkBcr8Adcws84aeMthZcf5wbGiVdCd",
              "flag": "VERIFIED",
              "collaborators": null,
              "__typename": "User"
            },
            "__typename": "GenerativeToken"
          },
          "__typename": "Objkt"
        },
        "__typename": "Listing"
      },
      {
        "id": 969763,
        "version": 1,
        "price": 11000000,
        "objkt": {
          "id": "FX0-1425931",
          "version": 1,
          "name": "Attractor #217",
          "slug": "attractor-217",
          "metadata": {
            "name": "Attractor #217",
            "iterationHash": "oojnVpQ1zvsoxrAczmwJ9EcoWHFPJGgf7qdMZWr9cbDnELXef3p",
            "description": "People are often drawn together over shared interest, and through their connections to those interests they find connections with others. Attractor is a visualization of community, a central interest bringing people together, pushing past their walls, bad habits, and traumas. The image is meant to be deceiving in its focus on the attractor, where the true focus is on the overlaps and complex defenses we build around ourselves. Those defenses can make us and those connections into more beautiful, ornate structures, or keep us distant from those around us. Sometimes focusing on a shared attractor is the only way we can let down our guard.\n\nPress ‚Äôs‚Äô to save a .png\nPress ‚Äôt‚Äô to toggle the grain for printing or personal preference\nPress ‚Äòp‚Äô to save a higher quality .png\nCreated with p5.js and chroma.js",
            "tags": [
              "pop",
              "colorful",
              "bauhaus",
              "vintage",
              "p5",
              "chroma.js",
              "setLineDash",
              "lightmap",
              "LUT",
              "aperture"
            ],
            "generatorUri": "ipfs://QmWu78XyA9UmySUSjKHHn8U3bBwy2nYQY1VVq8SVCqdt2p",
            "artifactUri": "ipfs://QmWu78XyA9UmySUSjKHHn8U3bBwy2nYQY1VVq8SVCqdt2p?fxhash=oojnVpQ1zvsoxrAczmwJ9EcoWHFPJGgf7qdMZWr9cbDnELXef3p",
            "displayUri": "ipfs://QmSspWJKHgyo4CXFXsJBDCkvRuBgGy69Z19AHFUWuwKkUd",
            "thumbnailUri": "ipfs://QmXktxVKDpKnQWwzjmBxMySYuFhkGkmKDbXCijCtLXNvtq",
            "authenticityHash": "85d747a59fc3533192d9e22d304e1eaaa66f16bd51e7d7d45dc65545a70aa994",
            "attributes": [
              {
                "name": "Palette",
                "value": "Source"
              },
              {
                "name": "Blade Type",
                "value": "Rounded"
              },
              {
                "name": "# Blades",
                "value": 5
              },
              {
                "name": "Tightness",
                "value": 3
              },
              {
                "name": "Dash Weight",
                "value": 9
              },
              {
                "name": "Layer Density",
                "value": 9
              }
            ],
            "decimals": 0,
            "symbol": "GENTK",
            "version": "0.2"
          },
          "duplicate": false,
          "activeListing": {
            "id": 969763,
            "version": 1,
            "price": 11000000,
            "__typename": "Listing"
          },
          "owner": {
            "id": "tz1QEiVSX2m1DGUZEfJUGZBRXtx4aZszmXfk",
            "name": "ABRI",
            "flag": "NONE",
            "avatarUri": "ipfs://QmYzQ9cLrSHNKsSTuc9BWdcrXG32n3uvrZB5R8teQ27tHK",
            "__typename": "User"
          },
          "issuer": {
            "flag": "NONE",
            "name": "Attractor",
            "author": {
              "id": "tz1LGRo4e3ke7kiCvJHGtmQSfPvLK5zhEHAR",
              "name": "Chris McCully",
              "type": "REGULAR",
              "avatarUri": "ipfs://QmW9su6C9tNsqVbSvdPDEbrGdLHs4xiwqprcmQkDxLbBjF",
              "flag": "VERIFIED",
              "collaborators": null,
              "__typename": "User"
            },
            "__typename": "GenerativeToken"
          },
          "__typename": "Objkt"
        },
        "__typename": "Listing"
      },
      {
        "id": 969761,
        "version": 1,
        "price": 85000000,
        "objkt": {
          "id": "FX1-10925",
          "version": 2,
          "name": "üå∏üåçüíÆüåèüèµÔ∏èüåéüå∫ #29",
          "slug": "29-e2959b8d-3d7b-4874-b0ac-1a6fa843130b",
          "metadata": {
            "name": "üå∏üåçüíÆüåèüèµÔ∏èüåéüå∫ #29",
            "iterationHash": "opMMbTwF4X2JT2GaUJ9HMZrp5P6i34HT2ZdrUEumfZitzKsFJhq",
            "description": "2023",
            "tags": [
              "p5js",
              "chroma",
              "geometric.js"
            ],
            "generatorUri": "ipfs://QmZq4SqAxBDrYPU8Ckjo1EFRnXdAKcwGaigjpdoNpL6XYQ",
            "artifactUri": "ipfs://QmZq4SqAxBDrYPU8Ckjo1EFRnXdAKcwGaigjpdoNpL6XYQ/?fxhash=opMMbTwF4X2JT2GaUJ9HMZrp5P6i34HT2ZdrUEumfZitzKsFJhq",
            "displayUri": "ipfs://Qma4T5Vb5eXjzXDWVmkt2p5jiuHkjpTNnh4Nvj7NiRwCDd",
            "thumbnailUri": "ipfs://QmPNVXA34VhEN3UAgWz8p4JWnMS44z1sJKNqvdbBegEnwM",
            "authenticityHash": "04c79afbf506a60d95ace9ee200eff444d2ec21b7af5e8fe56c8d30db2ffd857",
            "attributes": true,
            "decimals": 0,
            "symbol": "GENTK",
            "version": "0.2"
          },
          "duplicate": false,
          "activeListing": {
            "id": 969761,
            "version": 1,
            "price": 85000000,
            "__typename": "Listing"
          },
          "owner": {
            "id": "tz1V9EauaVkNMQMqzhmVdgZm2sKLaH9GsuRU",
            "name": "P0chita",
            "flag": "NONE",
            "avatarUri": "ipfs://QmNNSW4319z8SFDr93KFGjiVQQ17BBzRxuJF3a1avMmyHU",
            "__typename": "User"
          },
          "issuer": {
            "flag": "NONE",
            "name": "üå∏üåçüíÆüåèüèµÔ∏èüåéüå∫",
            "author": {
              "id": "tz1aDZAWqvQ3KekbwA5fPHSJZiPkfpR2gmQ9",
              "name": "OCM#5965",
              "type": "REGULAR",
              "avatarUri": "ipfs://QmPcn8SaNdG2Vznt6XPYB7RauKCCy58kUFakyUWpHMpfqR",
              "flag": "NONE",
              "collaborators": null,
              "__typename": "User"
            },
            "__typename": "GenerativeToken"
          },
          "__typename": "Objkt"
        },
        "__typename": "Listing"
      },
      {
        "id": 969760,
        "version": 1,
        "price": 15000000,
        "objkt": {
          "id": "FX1-48749",
          "version": 2,
          "name": "Blockchain Automaton #100",
          "slug": "blockchain-automaton-100",
          "metadata": {
            "name": "Blockchain Automaton #100",
            "iterationHash": "oo6RMpRnPuGJ9wrHQpcRZuMpuWABmJXvPgz5uRiSFhFDqyVXVPs",
            "description": "This experimental project involves an on-chain cellular automaton. The features and cellular automaton rules are derived from the minter's address. Being the first (unto my knowledge) project on fxhash that generates the artwork completely on chain, it seemed fitting to draw inspiration from one of the first projects on fxhash, \"RGB Elementary Cellular Automaton\".\n\nWhat is this?\n\nAn experimental generative token that integrates on-chain generation, and on-chain storage of the artwork. This is accomplished using a custom smart contract. The artwork is generated using the generate_on_chain entrypoint in KT1GRFujk5m6feK7gJcqCU7ijJkFgx5JigEt, and the generated image is subsequently stored on-chain as a byte-string of pixels (row-major order) in the tokens bigmap in KT1GRFujk5m6feK7gJcqCU7ijJkFgx5JigEt.\n\nHow does this work?\n\nSmart contracts have a default entrypoint which is automatically called when XTZ is sent to the contract. By using a smart contract as the primary address, the default entrypoint will be called every time a token is minted. Of course, to prevent accounts from bypassing the fxhash contracts and sending XTZ directly to the smart contract, generating and storing the artwork on-chain, the smart contract checks that an fxhash contract is the account sending XTZ. In this smart contract, the default entrypoint immediately calls the generate_on_chain entrypoint for the sole purpose of making the generation process more apparent on indexers like tzkt.\n\nIn order to make this project compatible with fxhash, the artwork produced by the code submitted to fxhash must be identical to that which is produced by the generative algorithm within the smart contract. At the time of development, the minter's address is the only piece of information which is readily accessible via the fxhash snippet API and in the smart contract. As a result, each account can only generate a single unique artwork (this is enforced by the contract). In the future, this issue could be solved if the fxhash snippet API provided access to the iteration number, as the smart contract could also keep track of this information quite easily.\n\nConsequently, collectors who wish to collect more than one iteration must create additional accounts to mint. The tokens can then be subsequently transferred as per usual.\n\nWhy is the variations preview disabled?\n\nBecause the minter's address is the source of randomness for the generated artwork, not the hash provided by fxhash, changing the hash in the variations preview will have no effect. To see different variations of the artwork you need to modify the fxminter URL parameter in live preview mode.\n\nWhy does the mint button not work on the fxhash frontend?\n\nCurrently, the fxhash frontend has a default storage limit for mint operations that is less than what is required to store the generated image on chain. As a result, the mint button will fail on the fxhash frontend. To get around this, you can mint this token on a mini-website I created (https://blockchain-automaton.netlify.app/), or on Better Call Dev, or by injecting the transaction directly onto the blockchain.\n\nBut Why?\n\nBecause experimentation is fun.",
            "tags": [
              "onchain",
              "cellular automaton",
              "blockchain",
              "pixelart"
            ],
            "generatorUri": "ipfs://Qmeb7huzBQZ5KTo2qqc48Kg5GEumYDKbXMN9UQXkD5Zz5Y",
            "artifactUri": "ipfs://Qmeb7huzBQZ5KTo2qqc48Kg5GEumYDKbXMN9UQXkD5Zz5Y/?fxhash=oo6RMpRnPuGJ9wrHQpcRZuMpuWABmJXvPgz5uRiSFhFDqyVXVPs&fxminter=tz1XyJeGD8hNMLcVHju6GaNTG3Zj6yLz3mpr",
            "displayUri": "ipfs://QmX5r62vhY9cdAUuSdiBckMRAjjEEzPS8xwHoCdWdZrtbj",
            "thumbnailUri": "ipfs://QmRjqnUYW9wpogfTSujuLpwhcejtpWNNLkXuPTmRMLYR8c",
            "authenticityHash": "21445a82596211f1614636fa3ddf2a521ae419a87594ea69b596a035d8fbd4f2",
            "attributes": [
              {
                "name": "mode",
                "value": "Diagonal"
              },
              {
                "name": "palette",
                "value": 13
              },
              {
                "name": "size",
                "value": "16x16"
              }
            ],
            "decimals": 0,
            "symbol": "GENTK",
            "version": "0.2"
          },
          "duplicate": false,
          "activeListing": {
            "id": 969760,
            "version": 1,
            "price": 15000000,
            "__typename": "Listing"
          },
          "owner": {
            "id": "tz1XyJeGD8hNMLcVHju6GaNTG3Zj6yLz3mpr",
            "name": "DEGEN",
            "flag": "NONE",
            "avatarUri": "ipfs://QmbTUToRK546fvdWDjJASfmXWofS7qGHBVm8QX8EucAkYN",
            "__typename": "User"
          },
          "issuer": {
            "flag": "NONE",
            "name": "Blockchain Automaton",
            "author": {
              "id": "tz1QvV3jVPWrJSdDy9ePZBnhGL8bAoQFFBPv",
              "name": "Extracurricular Activities",
              "type": "REGULAR",
              "avatarUri": "ipfs://QmahpnFUbW9NWQjUzNLUxxYLszZC2eeNo5mmRPikJLYge5",
              "flag": "VERIFIED",
              "collaborators": null,
              "__typename": "User"
            },
            "__typename": "GenerativeToken"
          },
          "__typename": "Objkt"
        },
        "__typename": "Listing"
      },
      {
        "id": 969759,
        "version": 1,
        "price": 15000000,
        "objkt": {
          "id": "FX1-48869",
          "version": 2,
          "name": "Blockchain Automaton #207",
          "slug": "blockchain-automaton-207",
          "metadata": {
            "name": "Blockchain Automaton #207",
            "iterationHash": "opTXCpCvbYYB7zPbRVCVz98nFVnjcLi53FrZcyWWDvNydH5fp3C",
            "description": "This experimental project involves an on-chain cellular automaton. The features and cellular automaton rules are derived from the minter's address. Being the first (unto my knowledge) project on fxhash that generates the artwork completely on chain, it seemed fitting to draw inspiration from one of the first projects on fxhash, \"RGB Elementary Cellular Automaton\".\n\nWhat is this?\n\nAn experimental generative token that integrates on-chain generation, and on-chain storage of the artwork. This is accomplished using a custom smart contract. The artwork is generated using the generate_on_chain entrypoint in KT1GRFujk5m6feK7gJcqCU7ijJkFgx5JigEt, and the generated image is subsequently stored on-chain as a byte-string of pixels (row-major order) in the tokens bigmap in KT1GRFujk5m6feK7gJcqCU7ijJkFgx5JigEt.\n\nHow does this work?\n\nSmart contracts have a default entrypoint which is automatically called when XTZ is sent to the contract. By using a smart contract as the primary address, the default entrypoint will be called every time a token is minted. Of course, to prevent accounts from bypassing the fxhash contracts and sending XTZ directly to the smart contract, generating and storing the artwork on-chain, the smart contract checks that an fxhash contract is the account sending XTZ. In this smart contract, the default entrypoint immediately calls the generate_on_chain entrypoint for the sole purpose of making the generation process more apparent on indexers like tzkt.\n\nIn order to make this project compatible with fxhash, the artwork produced by the code submitted to fxhash must be identical to that which is produced by the generative algorithm within the smart contract. At the time of development, the minter's address is the only piece of information which is readily accessible via the fxhash snippet API and in the smart contract. As a result, each account can only generate a single unique artwork (this is enforced by the contract). In the future, this issue could be solved if the fxhash snippet API provided access to the iteration number, as the smart contract could also keep track of this information quite easily.\n\nConsequently, collectors who wish to collect more than one iteration must create additional accounts to mint. The tokens can then be subsequently transferred as per usual.\n\nWhy is the variations preview disabled?\n\nBecause the minter's address is the source of randomness for the generated artwork, not the hash provided by fxhash, changing the hash in the variations preview will have no effect. To see different variations of the artwork you need to modify the fxminter URL parameter in live preview mode.\n\nWhy does the mint button not work on the fxhash frontend?\n\nCurrently, the fxhash frontend has a default storage limit for mint operations that is less than what is required to store the generated image on chain. As a result, the mint button will fail on the fxhash frontend. To get around this, you can mint this token on a mini-website I created (https://blockchain-automaton.netlify.app/), or on Better Call Dev, or by injecting the transaction directly onto the blockchain.\n\nBut Why?\n\nBecause experimentation is fun.",
            "tags": [
              "onchain",
              "cellular automaton",
              "blockchain",
              "pixelart"
            ],
            "generatorUri": "ipfs://Qmeb7huzBQZ5KTo2qqc48Kg5GEumYDKbXMN9UQXkD5Zz5Y",
            "artifactUri": "ipfs://Qmeb7huzBQZ5KTo2qqc48Kg5GEumYDKbXMN9UQXkD5Zz5Y/?fxhash=opTXCpCvbYYB7zPbRVCVz98nFVnjcLi53FrZcyWWDvNydH5fp3C&fxminter=tz1Xihtfn29i2jAFqbJQHmoCS1es33QpJoyb",
            "displayUri": "ipfs://QmZ79N9AokZ5JMR8r2g5WRApxpcpjsZygPbGSBBsDaZR8M",
            "thumbnailUri": "ipfs://QmbhWLcZVPWTQwF4qQk3PUEnjhrSzZhkhHSSSbsuJVuxrG",
            "authenticityHash": "968d4a5297d17671da7cb0d75898826bf170bf1590724f2d74b3a289d9ff11fa",
            "attributes": [
              {
                "name": "mode",
                "value": "Vertical"
              },
              {
                "name": "palette",
                "value": 17
              },
              {
                "name": "size",
                "value": "32x32"
              }
            ],
            "decimals": 0,
            "symbol": "GENTK",
            "version": "0.2"
          },
          "duplicate": false,
          "activeListing": {
            "id": 969759,
            "version": 1,
            "price": 15000000,
            "__typename": "Listing"
          },
          "owner": {
            "id": "tz1Xihtfn29i2jAFqbJQHmoCS1es33QpJoyb",
            "name": null,
            "flag": "NONE",
            "avatarUri": null,
            "__typename": "User"
          },
          "issuer": {
            "flag": "NONE",
            "name": "Blockchain Automaton",
            "author": {
              "id": "tz1QvV3jVPWrJSdDy9ePZBnhGL8bAoQFFBPv",
              "name": "Extracurricular Activities",
              "type": "REGULAR",
              "avatarUri": "ipfs://QmahpnFUbW9NWQjUzNLUxxYLszZC2eeNo5mmRPikJLYge5",
              "flag": "VERIFIED",
              "collaborators": null,
              "__typename": "User"
            },
            "__typename": "GenerativeToken"
          },
          "__typename": "Objkt"
        },
        "__typename": "Listing"
      },
      {
        "id": 969758,
        "version": 1,
        "price": 16900000,
        "objkt": {
          "id": "FX1-48845",
          "version": 2,
          "name": "Blockchain Automaton #187",
          "slug": "blockchain-automaton-187",
          "metadata": {
            "name": "Blockchain Automaton #187",
            "iterationHash": "ongLxxj92hYqLVss1pb4zAxxRri2FitB343Xj3NtRLdyhE1hz7v",
            "description": "This experimental project involves an on-chain cellular automaton. The features and cellular automaton rules are derived from the minter's address. Being the first (unto my knowledge) project on fxhash that generates the artwork completely on chain, it seemed fitting to draw inspiration from one of the first projects on fxhash, \"RGB Elementary Cellular Automaton\".\n\nWhat is this?\n\nAn experimental generative token that integrates on-chain generation, and on-chain storage of the artwork. This is accomplished using a custom smart contract. The artwork is generated using the generate_on_chain entrypoint in KT1GRFujk5m6feK7gJcqCU7ijJkFgx5JigEt, and the generated image is subsequently stored on-chain as a byte-string of pixels (row-major order) in the tokens bigmap in KT1GRFujk5m6feK7gJcqCU7ijJkFgx5JigEt.\n\nHow does this work?\n\nSmart contracts have a default entrypoint which is automatically called when XTZ is sent to the contract. By using a smart contract as the primary address, the default entrypoint will be called every time a token is minted. Of course, to prevent accounts from bypassing the fxhash contracts and sending XTZ directly to the smart contract, generating and storing the artwork on-chain, the smart contract checks that an fxhash contract is the account sending XTZ. In this smart contract, the default entrypoint immediately calls the generate_on_chain entrypoint for the sole purpose of making the generation process more apparent on indexers like tzkt.\n\nIn order to make this project compatible with fxhash, the artwork produced by the code submitted to fxhash must be identical to that which is produced by the generative algorithm within the smart contract. At the time of development, the minter's address is the only piece of information which is readily accessible via the fxhash snippet API and in the smart contract. As a result, each account can only generate a single unique artwork (this is enforced by the contract). In the future, this issue could be solved if the fxhash snippet API provided access to the iteration number, as the smart contract could also keep track of this information quite easily.\n\nConsequently, collectors who wish to collect more than one iteration must create additional accounts to mint. The tokens can then be subsequently transferred as per usual.\n\nWhy is the variations preview disabled?\n\nBecause the minter's address is the source of randomness for the generated artwork, not the hash provided by fxhash, changing the hash in the variations preview will have no effect. To see different variations of the artwork you need to modify the fxminter URL parameter in live preview mode.\n\nWhy does the mint button not work on the fxhash frontend?\n\nCurrently, the fxhash frontend has a default storage limit for mint operations that is less than what is required to store the generated image on chain. As a result, the mint button will fail on the fxhash frontend. To get around this, you can mint this token on a mini-website I created (https://blockchain-automaton.netlify.app/), or on Better Call Dev, or by injecting the transaction directly onto the blockchain.\n\nBut Why?\n\nBecause experimentation is fun.",
            "tags": [
              "onchain",
              "cellular automaton",
              "blockchain",
              "pixelart"
            ],
            "generatorUri": "ipfs://Qmeb7huzBQZ5KTo2qqc48Kg5GEumYDKbXMN9UQXkD5Zz5Y",
            "artifactUri": "ipfs://Qmeb7huzBQZ5KTo2qqc48Kg5GEumYDKbXMN9UQXkD5Zz5Y/?fxhash=ongLxxj92hYqLVss1pb4zAxxRri2FitB343Xj3NtRLdyhE1hz7v&fxminter=tz1cN74fePmR9hW6FkJBVzAWwjsLfxXtczkk",
            "displayUri": "ipfs://QmQxZSNLwveVwYbZFdEdKQBcEXpd1w8n7iP46A2gRhj4jm",
            "thumbnailUri": "ipfs://QmatoaWobki9zqqBJSfbbJMZiFNvk2JL2zCVPWYM6CbU47",
            "authenticityHash": "bbc22d9cea98f21a741b3b5a71e625e5b5f0f3d03b28052ce6f90cf254596b89",
            "attributes": [
              {
                "name": "mode",
                "value": "Vertical"
              },
              {
                "name": "palette",
                "value": 5
              },
              {
                "name": "size",
                "value": "32x32"
              }
            ],
            "decimals": 0,
            "symbol": "GENTK",
            "version": "0.2"
          },
          "duplicate": false,
          "activeListing": {
            "id": 969758,
            "version": 1,
            "price": 16900000,
            "__typename": "Listing"
          },
          "owner": {
            "id": "tz1cN74fePmR9hW6FkJBVzAWwjsLfxXtczkk",
            "name": "postman",
            "flag": "NONE",
            "avatarUri": "ipfs://QmfEnNx8tTq7H3rJ9gYMkcjgLJ79maLJ5U84cGsnbci3Kh",
            "__typename": "User"
          },
          "issuer": {
            "flag": "NONE",
            "name": "Blockchain Automaton",
            "author": {
              "id": "tz1QvV3jVPWrJSdDy9ePZBnhGL8bAoQFFBPv",
              "name": "Extracurricular Activities",
              "type": "REGULAR",
              "avatarUri": "ipfs://QmahpnFUbW9NWQjUzNLUxxYLszZC2eeNo5mmRPikJLYge5",
              "flag": "VERIFIED",
              "collaborators": null,
              "__typename": "User"
            },
            "__typename": "GenerativeToken"
          },
          "__typename": "Objkt"
        },
        "__typename": "Listing"
      },
      {
        "id": 969757,
        "version": 1,
        "price": 29990000,
        "objkt": {
          "id": "FX1-48811",
          "version": 2,
          "name": "Blockchain Automaton #159",
          "slug": "blockchain-automaton-159",
          "metadata": {
            "name": "Blockchain Automaton #159",
            "iterationHash": "ooMzR8mzN9fHnHFjFNdLsMtkokFrfk2mowoXkLP3R31zZskApYr",
            "description": "This experimental project involves an on-chain cellular automaton. The features and cellular automaton rules are derived from the minter's address. Being the first (unto my knowledge) project on fxhash that generates the artwork completely on chain, it seemed fitting to draw inspiration from one of the first projects on fxhash, \"RGB Elementary Cellular Automaton\".\n\nWhat is this?\n\nAn experimental generative token that integrates on-chain generation, and on-chain storage of the artwork. This is accomplished using a custom smart contract. The artwork is generated using the generate_on_chain entrypoint in KT1GRFujk5m6feK7gJcqCU7ijJkFgx5JigEt, and the generated image is subsequently stored on-chain as a byte-string of pixels (row-major order) in the tokens bigmap in KT1GRFujk5m6feK7gJcqCU7ijJkFgx5JigEt.\n\nHow does this work?\n\nSmart contracts have a default entrypoint which is automatically called when XTZ is sent to the contract. By using a smart contract as the primary address, the default entrypoint will be called every time a token is minted. Of course, to prevent accounts from bypassing the fxhash contracts and sending XTZ directly to the smart contract, generating and storing the artwork on-chain, the smart contract checks that an fxhash contract is the account sending XTZ. In this smart contract, the default entrypoint immediately calls the generate_on_chain entrypoint for the sole purpose of making the generation process more apparent on indexers like tzkt.\n\nIn order to make this project compatible with fxhash, the artwork produced by the code submitted to fxhash must be identical to that which is produced by the generative algorithm within the smart contract. At the time of development, the minter's address is the only piece of information which is readily accessible via the fxhash snippet API and in the smart contract. As a result, each account can only generate a single unique artwork (this is enforced by the contract). In the future, this issue could be solved if the fxhash snippet API provided access to the iteration number, as the smart contract could also keep track of this information quite easily.\n\nConsequently, collectors who wish to collect more than one iteration must create additional accounts to mint. The tokens can then be subsequently transferred as per usual.\n\nWhy is the variations preview disabled?\n\nBecause the minter's address is the source of randomness for the generated artwork, not the hash provided by fxhash, changing the hash in the variations preview will have no effect. To see different variations of the artwork you need to modify the fxminter URL parameter in live preview mode.\n\nWhy does the mint button not work on the fxhash frontend?\n\nCurrently, the fxhash frontend has a default storage limit for mint operations that is less than what is required to store the generated image on chain. As a result, the mint button will fail on the fxhash frontend. To get around this, you can mint this token on a mini-website I created (https://blockchain-automaton.netlify.app/), or on Better Call Dev, or by injecting the transaction directly onto the blockchain.\n\nBut Why?\n\nBecause experimentation is fun.",
            "tags": [
              "onchain",
              "cellular automaton",
              "blockchain",
              "pixelart"
            ],
            "generatorUri": "ipfs://Qmeb7huzBQZ5KTo2qqc48Kg5GEumYDKbXMN9UQXkD5Zz5Y",
            "artifactUri": "ipfs://Qmeb7huzBQZ5KTo2qqc48Kg5GEumYDKbXMN9UQXkD5Zz5Y/?fxhash=ooMzR8mzN9fHnHFjFNdLsMtkokFrfk2mowoXkLP3R31zZskApYr&fxminter=tz1iCWKj4FLFeBSr5rPH3rdFCedg4RWrqh9w",
            "displayUri": "ipfs://QmZu2MWTc4Li3mfaB13wPCyWrQrEsRuyc8dGgRfHKWKaGE",
            "thumbnailUri": "ipfs://QmZd1cSC6g3trKav73Tb6rP4PArUz9WuoStfcR5EmTU7bZ",
            "authenticityHash": "4559d7464a348f0b1893c9297d2f2adc74d4c64eaf1b56b38e7c35b9f7bf3754",
            "attributes": [
              {
                "name": "mode",
                "value": "Vertical"
              },
              {
                "name": "palette",
                "value": 5
              },
              {
                "name": "size",
                "value": "16x16"
              }
            ],
            "decimals": 0,
            "symbol": "GENTK",
            "version": "0.2"
          },
          "duplicate": false,
          "activeListing": {
            "id": 969757,
            "version": 1,
            "price": 29990000,
            "__typename": "Listing"
          },
          "owner": {
            "id": "tz1eU7jnivGFQmTgNkpgFzCEkTU4aUmMmV4k",
            "name": "rockshow",
            "flag": "NONE",
            "avatarUri": "ipfs://QmUXEb37J7pKju8SUbT9s38JScvRSTgKRvyHu8ZEfmPsM3",
            "__typename": "User"
          },
          "issuer": {
            "flag": "NONE",
            "name": "Blockchain Automaton",
            "author": {
              "id": "tz1QvV3jVPWrJSdDy9ePZBnhGL8bAoQFFBPv",
              "name": "Extracurricular Activities",
              "type": "REGULAR",
              "avatarUri": "ipfs://QmahpnFUbW9NWQjUzNLUxxYLszZC2eeNo5mmRPikJLYge5",
              "flag": "VERIFIED",
              "collaborators": null,
              "__typename": "User"
            },
            "__typename": "GenerativeToken"
          },
          "__typename": "Objkt"
        },
        "__typename": "Listing"
      },
      {
        "id": 969756,
        "version": 1,
        "price": 17200000,
        "objkt": {
          "id": "FX1-49014",
          "version": 2,
          "name": "Blockchain Automaton #341",
          "slug": "blockchain-automaton-341",
          "metadata": {
            "name": "Blockchain Automaton #341",
            "iterationHash": "ongQu6sUPwVgJe8s8dPud6FSBW4Nx9xkNDKMprsSLQ13HLsA47e",
            "description": "This experimental project involves an on-chain cellular automaton. The features and cellular automaton rules are derived from the minter's address. Being the first (unto my knowledge) project on fxhash that generates the artwork completely on chain, it seemed fitting to draw inspiration from one of the first projects on fxhash, \"RGB Elementary Cellular Automaton\".\n\nWhat is this?\n\nAn experimental generative token that integrates on-chain generation, and on-chain storage of the artwork. This is accomplished using a custom smart contract. The artwork is generated using the generate_on_chain entrypoint in KT1GRFujk5m6feK7gJcqCU7ijJkFgx5JigEt, and the generated image is subsequently stored on-chain as a byte-string of pixels (row-major order) in the tokens bigmap in KT1GRFujk5m6feK7gJcqCU7ijJkFgx5JigEt.\n\nHow does this work?\n\nSmart contracts have a default entrypoint which is automatically called when XTZ is sent to the contract. By using a smart contract as the primary address, the default entrypoint will be called every time a token is minted. Of course, to prevent accounts from bypassing the fxhash contracts and sending XTZ directly to the smart contract, generating and storing the artwork on-chain, the smart contract checks that an fxhash contract is the account sending XTZ. In this smart contract, the default entrypoint immediately calls the generate_on_chain entrypoint for the sole purpose of making the generation process more apparent on indexers like tzkt.\n\nIn order to make this project compatible with fxhash, the artwork produced by the code submitted to fxhash must be identical to that which is produced by the generative algorithm within the smart contract. At the time of development, the minter's address is the only piece of information which is readily accessible via the fxhash snippet API and in the smart contract. As a result, each account can only generate a single unique artwork (this is enforced by the contract). In the future, this issue could be solved if the fxhash snippet API provided access to the iteration number, as the smart contract could also keep track of this information quite easily.\n\nConsequently, collectors who wish to collect more than one iteration must create additional accounts to mint. The tokens can then be subsequently transferred as per usual.\n\nWhy is the variations preview disabled?\n\nBecause the minter's address is the source of randomness for the generated artwork, not the hash provided by fxhash, changing the hash in the variations preview will have no effect. To see different variations of the artwork you need to modify the fxminter URL parameter in live preview mode.\n\nWhy does the mint button not work on the fxhash frontend?\n\nCurrently, the fxhash frontend has a default storage limit for mint operations that is less than what is required to store the generated image on chain. As a result, the mint button will fail on the fxhash frontend. To get around this, you can mint this token on a mini-website I created (https://blockchain-automaton.netlify.app/), or on Better Call Dev, or by injecting the transaction directly onto the blockchain.\n\nBut Why?\n\nBecause experimentation is fun.",
            "tags": [
              "onchain",
              "cellular automaton",
              "blockchain",
              "pixelart"
            ],
            "generatorUri": "ipfs://Qmeb7huzBQZ5KTo2qqc48Kg5GEumYDKbXMN9UQXkD5Zz5Y",
            "artifactUri": "ipfs://Qmeb7huzBQZ5KTo2qqc48Kg5GEumYDKbXMN9UQXkD5Zz5Y/?fxhash=ongQu6sUPwVgJe8s8dPud6FSBW4Nx9xkNDKMprsSLQ13HLsA47e&fxminter=tz1b9YUVtMNms4vpYjxL6TqdvChF3sU31khh",
            "displayUri": "ipfs://QmcWLEF8EnfF3UVm8KrcPYJ4ea5pkpwSYktrcZYAKCPKbv",
            "thumbnailUri": "ipfs://QmQQjq2jdTuFyGMkJweoyzPmfHNHo3ymmFeUuhEUEFAxXU",
            "authenticityHash": "10e1f56b2a14ed4049efa9fe5464bb2cfa98eb261bb1ffc35f50407a00df3e52",
            "attributes": [
              {
                "name": "mode",
                "value": "Horizontal"
              },
              {
                "name": "palette",
                "value": 11
              },
              {
                "name": "size",
                "value": "32x32"
              }
            ],
            "decimals": 0,
            "symbol": "GENTK",
            "version": "0.2"
          },
          "duplicate": false,
          "activeListing": {
            "id": 969756,
            "version": 1,
            "price": 17200000,
            "__typename": "Listing"
          },
          "owner": {
            "id": "tz1b9YUVtMNms4vpYjxL6TqdvChF3sU31khh",
            "name": "manggaminggu",
            "flag": "NONE",
            "avatarUri": "ipfs://QmV3qKLk4xRb2d8eLha4hoEuXC5PpcNCt3nvtzMAvdZxmn",
            "__typename": "User"
          },
          "issuer": {
            "flag": "NONE",
            "name": "Blockchain Automaton",
            "author": {
              "id": "tz1QvV3jVPWrJSdDy9ePZBnhGL8bAoQFFBPv",
              "name": "Extracurricular Activities",
              "type": "REGULAR",
              "avatarUri": "ipfs://QmahpnFUbW9NWQjUzNLUxxYLszZC2eeNo5mmRPikJLYge5",
              "flag": "VERIFIED",
              "collaborators": null,
              "__typename": "User"
            },
            "__typename": "GenerativeToken"
          },
          "__typename": "Objkt"
        },
        "__typename": "Listing"
      }
    ]
  }
}
